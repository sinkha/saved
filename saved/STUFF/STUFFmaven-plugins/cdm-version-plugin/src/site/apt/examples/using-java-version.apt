 ------
Using the Java version class
 ------
Karla Jacobsen
 <kjacobse@cdmtech.com>
 ------
 2010-04-30
 ------

Using the Java Version Class
  
  When using the cdm-version-plugin to generate a version class in Java, you must be sure to also include the core_version dependency. The following is the cdm-version-plugin version and the corresponding core_version version required at runtime:

    * cdm-version-plugin 2.1.1-SNAPSHOT - >com.cdmtech.core:core_version:1.2.1-SNAPSHOT

    * cdm-version-plugin 2.1.0 - >com.cdmtech.core:core_version:1.2.0
    
    * cdm-version-plugin 2.0.0 - >com.cdmtech.core:core_version:1.1.0
    
    * cdm-version-plugin 2.0.0-beta3 - >com.cdmtech.core:core_version:1.1.0

    * cdm-version-plugin 2.0.0-beta2 - >com.cdmtech.core:core_version:1.00.00
  
Examples

  The following is a code snippet demonstrating how to invoke the Java version class statically and directly.

+-----+
public class VersionTester {

  public static void main(String[] argv) {
    
    /*
     * Print out the values when retrieving the version class statically.
     */
    try {
      com.cdmtech.core.version.Version versionFromStatic = com.cdmtech.core.version.Version.getVersion(
                  "com.cdmtech.atlas.maven.cdm_version_plugin_java_test.Version");
      System.out.println("Static retrieval of Version: ");
      System.out.println("\tMajor Version: " + versionFromStatic.getMajorVersion());
      System.out.println("\tMinor Version: " + versionFromStatic.getMinorVersion());
      System.out.println("\tIncremental Version: " + versionFromStatic.getIncrementalVersion());
      System.out.println("\tBuild Number: " + versionFromStatic.getBuildNumber());
      System.out.println("\tSCM Build Number: " + versionFromStatic.getSCMBuildNumber());
      System.out.println("\tCI Build Number: " + versionFromStatic.getCIBuildNumber());
      System.out.println("\tDateTimeStamp: " + versionFromStatic.getDateTimeStamp());
      System.out.println("\tDateTimeStampString: " + versionFromStatic.getDateTimeStampString());
      System.out.println("\tQualifier: " + versionFromStatic.getQualifier());
      System.out.println("\ttoString: " + versionFromStatic.toString());
    } catch(Exception e) {
      System.out.println("Failed to retrieve Version class statically: \n" );
      e.printStackTrace();
    }

    /*
     * Print out the values when manually instantiating the version class.
     */
    try {
      com.cdmtech.atlas.maven.cdm_version_plugin_java_test.Version versionDirect = new com.cdmtech.atlas.maven.cdm_version_plugin_java_test.Version();
      System.out.println("\nInstantation of Version: ");
      System.out.println("\tMajor Version: " + versionDirect.getMajorVersion());
      System.out.println("\tMinor Version: " + versionDirect.getMinorVersion());
      System.out.println("\tIncremental Version: " + versionDirect.getIncrementalVersion());
      System.out.println("\tBuild Number: " + versionDirect.getBuildNumber());
      System.out.println("\tSCM Build Number: " + versionDirect.getSCMBuildNumber());
      System.out.println("\tCI Build Number: " + versionDirect.getCIBuildNumber());
      System.out.println("\tDateTimeStamp: " + versionDirect.getDateTimeStamp());
      System.out.println("\tDateTimeStampString: " + versionDirect.getDateTimeStampString());
      System.out.println("\tQualifier: " + versionDirect.getQualifier());
      System.out.println("\ttoString: " + versionDirect.toString());
      
    } catch(Exception e) {
      System.out.println("Failed to retrieve Version class: \n" );
      e.printStackTrace();
    }
    
    /*
     * Print out the method calls used to retrieve the above values.
     */
    System.out.println("\nJava code: ");
    System.out.println("\tMajor Version: version.getMajorVersion()");
    System.out.println("\tMinor Version: version.getMinorVersion()");
    System.out.println("\tIncremental Version: version.getIncrementalVersion()");
    System.out.println("\tBuild Number: version.getBuildNumber()");
    System.out.println("\tSCM Build Number: version.getSCMBuildNumber()");
    System.out.println("\tCI Build Number: version.getCIBuildNumber()");
    System.out.println("\tDateTimeStamp: version.getDateTimeStamp()");
    System.out.println("\tDateTimeStampString: version.getDateTimeStampString()");
    System.out.println("\tQualifier: version.getQualifier()");
    System.out.println("\ttoString: version.toString()");
  }
}

+-----+

Example Outputs

  Example output generated by above class. 
  
  Release version:
  
+-----+
Static retrieval of Version: 
  Major Version: 1
  Minor Version: 0
  Incremental Version: 0
  Build Number: 0
  SCM Build Number: 38280
  CI Build Number: 33
  DateTimeStamp: Thu Jul 01 15:25:44 PDT 2010
  DateTimeStampString: 7/1/10 3:25 PM
  Qualifier: null
  toString: 1.0.0

Instantiation of Version: 
  Major Version: 1
  Minor Version: 0
  Incremental Version: 0
  Build Number: 0
  SCM Build Number: 38280
  CI Build Number: 33
  DateTimeStamp: Thu Jul 01 15:25:44 PDT 2010
  DateTimeStampString: 7/1/10 3:25 PM
  Qualifier: null
  toString: 1.0.0

+-----+

    Snapshot version:
    
+-----+
Static retrieval of Version: 
  Major Version: 1
  Minor Version: 0
  Incremental Version: 0
  Build Number: 0
  SCM Build Number: 38280
  CI Build Number: 33
  DateTimeStamp: Thu Jul 01 15:25:44 PDT 2010
  DateTimeStampString: 7/1/10 3:25 PM
  Qualifier: SNAPSHOT
  toString: 1.0.0-SNAPSHOT

Instantiation of Version: 
  Major Version: 1
  Minor Version: 0
  Incremental Version: 0
  Build Number: 0
  SCM Build Number: 38280
  CI Build Number: 33
  DateTimeStamp: Thu Jul 01 15:25:44 PDT 2010
  DateTimeStampString: 7/1/10 3:25 PM
  Qualifier: SNAPSHOT
  toString: 1.0.0-SNAPSHOT
  
+-----+

    Development build (on developer machine, not Hudson)
    
+-----+
Static retrieval of Version: 
  Major Version: 1
  Minor Version: 0
  Incremental Version: 0
  Build Number: 0
  SCM Build Number: UNKNOWN
  CI Build Number: UNKNOWN
  DateTimeStamp: Thu Jul 01 15:25:44 PDT 2010
  DateTimeStampString: 7/1/10 3:25 PM
  Qualifier: SNAPSHOT
  toString: 1.0.0-SNAPSHOT

Instantiation of Version: 
  Major Version: 1
  Minor Version: 0
  Incremental Version: 0
  Build Number: 0
  SCM Build Number: UNKNOWN
  CI Build Number: UNKNOWN
  DateTimeStamp: Thu Jul 01 15:25:44 PDT 2010
  DateTimeStampString: 7/1/10 3:25 PM
  Qualifier: SNAPSHOT
  toString: 1.0.0-SNAPSHOT
  
+-----+