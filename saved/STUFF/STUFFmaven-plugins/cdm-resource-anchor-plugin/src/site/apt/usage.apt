 ------
Usage
 ------
Karla Jacobsen
 <kjacobse@cdmtech.com>
 ------
 2010-10-13
 ------

Usage

  This plugin can be used to generate an ActionScript class which contains static variable references to image files.

* Generating the resource anchor

  To generate the resource anchor class:

+-----+
<project>
  ...
  <build>
    ...
    <plugins>
      <plugin>
        <groupId>com.cdmtech.atlas.maven</groupId>
        <artifactId>cdm-resource-anchor-plugin</artifactId>
        <version>1.1.0-SNAPSHOT</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>generate-resource-anchor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      ...
    </plugins>
  </build>
  ...
</project>

+-----+

* A more complicated configuration

  Various configuration options are available to allow the 
  user to customize the generated class. This example shows
  the extended generation (which produces an additional mapping
  of file names to variable IDs). This example also shows: customization
  of the generated file name (in this case SymbolResource instead 
  of the default which appends 'ResourceAnchor' on to the artifactId);
  specifying an alternative directory for images; and converting 
  variable names to all upper case.

+-----+
<project>
  ...
  <build>
    ...
    <plugins>
      <plugin>
        <groupId>com.cdmtech.atlas.maven</groupId>
        <artifactId>cdm-resource-anchor-plugin</artifactId>
        <version>1.1.0-SNAPSHOT</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>generate-resource-anchor</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <convertToUpperCase>true</convertToUpperCase>
          <resourceAnchorName>SymbolResource</resourceAnchorName>
          <imagesDirectory>${project.build.directory}/src/main/resources</imagesDirectory>
          <extendedGeneration>true</extendedGeneration>
        </configuration>
      </plugin>
      ...
    </plugins>
  </build>
  ...
</project>

+-----+
